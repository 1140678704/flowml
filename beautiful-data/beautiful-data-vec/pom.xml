<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>beautiful-data</artifactId>
        <groupId>com.beautiful</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>beautiful-data-vec</artifactId>
    <packaging>jar</packaging>

    <name>beautiful-data-vec</name>
    <url>http://maven.apache.org</url>


        <properties>
            <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
            <jcommander.version>1.27</jcommander.version>
            <spark.version>2.2.1</spark.version>
            <play.version>2.4.6</play.version>
            <slf4j.version>1.7.7</slf4j.version>
            <nd4j.version>0.9.1</nd4j.version>
            <junit.version>4.12</junit.version>
            <jackson.version>2.8.7</jackson.version>    <!-- To match spark and geoip2 -->
            <commons-compress.version>1.8.1</commons-compress.version>
            <commons-lang3.version>3.3.1</commons-lang3.version>
            <commons-math3.version>3.3</commons-math3.version>
            <commons-io.version>2.4</commons-io.version>
            <args4j.version>2.0.29</args4j.version>
            <lombok.version>1.16.10</lombok.version>
            <jodatime.version>2.9.2</jodatime.version>
            <freemarker.version>2.3.23</freemarker.version>
            <logback.version>1.1.2</logback.version>
            <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
            <reflections.version>0.9.10</reflections.version>
            <opencv.version>3.2.0</opencv.version>
            <ffmpeg.version>3.2.1</ffmpeg.version>
            <leptonica.version>1.73</leptonica.version>
            <javacpp-presets.version>1.3</javacpp-presets.version>
            <javacpp.version>1.3.3</javacpp.version>
            <javacv.version>1.3.3</javacv.version>
            <geoip2.version>2.8.1</geoip2.version>
            <stream.analytics.version>2.7.0</stream.analytics.version>
            <hadoop.version>2.2.0</hadoop.version>  <!-- Hadoop version used by Spark 1.6.3 and 2.2.1 (and likely others) -->
            <mm-util-backport-java.version>1.0.1</mm-util-backport-java.version>
            <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
            <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
            <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
            <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
            <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
            <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
            <maven-lifecycle-mapping-plugin.version>1.0.0</maven-lifecycle-mapping-plugin.version>
            <maven-scala-plugin.version>3.2.2</maven-scala-plugin.version>
            <maven-lint-plugin.version>0.0.11</maven-lint-plugin.version>
            <maven-formatter-plugin.version>2.0.0</maven-formatter-plugin.version>
            <maven-git-commit-id-plugin.version>2.2.2</maven-git-commit-id-plugin.version>
            <maven-build-helper-plugin.version>1.12</maven-build-helper-plugin.version>
        </properties>


    <dependencies>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.40</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.18</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${commons-compress.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>${commons-math3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- ND4J common, mainly for CompactHeapStringList -->
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-common</artifactId>
            <version>${nd4j.version}</version>
        </dependency>

        <!-- ND4J api, mainly for NDArrayWritable and recognizing an INDArray in UnsafeWritableInjector -->
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-api</artifactId>
            <version>${nd4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.11</artifactId>
            <version>${spark.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_2.11</artifactId>
            <version>${spark.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.11</artifactId>
            <version>${spark.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_2.11</artifactId>
            <version>${spark.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>jsr305</artifactId>
                </exclusion>
            </exclusions>
            <!--<scope>provided</scope>-->
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- 编译时生成源码包 -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- touch pom.xml, 在install时，确保pom.xml时间戳最新，以满足container能够自动更新最新的版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <touch file="pom.xml" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>./target/lib/</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <directory>target</directory>
    </build>
</project>
